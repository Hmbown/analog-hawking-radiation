name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e .[dev]

      - name: Run tests
        run: |
          pytest -q

      - name: Lint (ruff)
        run: |
          ruff --version
          ruff check .

      - name: Format check (black)
        run: |
          black --version
          black --check .

      - name: Render docs from results (consistency check)
        run: |
          python scripts/doc_sync/render_docs.py \
            --sweep results/gradient_limits_production/gradient_catastrophe_sweep.json \
            --pic results/pic_pipeline_summary.json
          # Ensure committed docs stay in sync with data
          git --no-pager diff -- RESEARCH_HIGHLIGHTS.md docs/GradientCatastropheFindings.md || true
          # Fail if there are uncommitted changes after rendering
          if ! git diff --quiet -- RESEARCH_HIGHLIGHTS.md docs/GradientCatastropheFindings.md; then \
            echo 'Docs are out of sync with results JSONs. Run render_docs.py and commit.'; \
            exit 1; \
          fi
